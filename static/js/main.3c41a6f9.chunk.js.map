{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onMovieAdd","useState","title","setTitle","error","setError","setMovie","onSubmit","event","preventDefault","length","htmlFor","type","id","value","placeholder","onChange","target","onClick","movieTitle","fetch","then","response","json","result","Response","App","state","addMovie","some","movieFromList","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"qVAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,OCPRC,G,MAA8B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC5C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,CACjCV,OAAQ,GACRE,MAAO,GACPC,KAAM,GACNI,OAAQ,KAJV,mBAAOV,EAAP,KAAckB,EAAd,KAiDA,OACE,qCACE,uBACEjB,UAAU,aACVkB,SA3Be,SAACC,GACf,OAALA,QAAK,IAALA,KAAOC,iBAEHrB,EAAMK,MAAMiB,OAAS,GACvBV,EAAWZ,GAGbkB,EAAS,CACPf,OAAQ,GACRE,MAAO,GACPC,KAAM,GACNI,OAAQ,KAGVK,EAAS,KAWP,UAIE,sBAAKd,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQsB,QAAQ,cAAjC,wBAEE,qBAAKtB,UAAU,UAAf,SACE,uBACEuB,KAAK,OACLC,GAAG,cACHC,MAAOZ,EACPa,YAAY,0BACZ1B,UAAU,kBACV2B,SAtBO,SAACR,GACpBL,EAASK,EAAMS,OAAOH,OAEtBT,GAAS,WAuBFD,GAEC,mBAAGf,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEuB,KAAK,SACLvB,UAAU,kBACV6B,QAAS,kBA3EEC,EA2EkBjB,EA1EvCI,EAAS,CACPf,OAAQ,GACRE,MAAO,GACPC,KAAM,GACNI,OAAQ,UAGVsB,MAAM,8CAAD,OAA+CD,IACjDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACoB,UAApBA,EAAOC,SACTnB,EAASkB,GAETnB,GAAS,MAdK,IAACc,GAwEb,4BASF,qBAAK9B,UAAU,UAAf,SACE,wBACEuB,KAAK,SACLvB,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,EAAMK,MAAMiB,OAAS,GACnB,cAAC,EAAD,CAAWtB,MAAOA,YCxGhBsC,EAAb,4MACEC,MAAe,CACb/B,OAAQ,IAFZ,EAKEgC,SAAW,SAACxC,GACL,EAAKuC,MAAM/B,OAAOiC,MAAK,SAAAC,GAAa,OAAI1C,EAAMU,SAAWgC,EAAchC,WAC1E,EAAKiC,UAAS,SAAAJ,GAAK,MAAK,CACtB/B,OAAO,GAAD,mBAAM+B,EAAM/B,QAAZ,CAAoBR,SARlC,4CAaE,WACE,IAAQQ,EAAWoC,KAAKL,MAAhB/B,OAER,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,WAAYgC,KAAKJ,oBAtBtC,GAAyBK,aCLzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3c41a6f9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onMovieAdd: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC <Props> = ({ onMovieAdd }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n\n  const handleRequest = (movieTitle: string) => {\n    setMovie({\n      Poster: '',\n      Title: '',\n      Plot: '',\n      imdbID: '',\n    });\n\n    fetch(`https://www.omdbapi.com/?apikey=e45c8c40&t=${movieTitle}`)\n      .then(response => response.json())\n      .then(result => {\n        if (result.Response !== 'False') {\n          setMovie(result);\n        } else {\n          setError(true);\n        }\n      });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event?.preventDefault();\n\n    if (movie.Title.length > 0) {\n      onMovieAdd(movie);\n    }\n\n    setMovie({\n      Poster: '',\n      Title: '',\n      Plot: '',\n      imdbID: '',\n    });\n\n    setTitle('');\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    setError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                value={title}\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n                onChange={handleChange}\n              />\n            </div>\n          </label>\n          {error\n          && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => handleRequest(title)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie.Title.length > 0\n        && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (movie: Movie) => {\n    if (!this.state.movies.some(movieFromList => movie.imdbID === movieFromList.imdbID)) {\n      this.setState(state => ({\n        movies: [...state.movies, movie],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onMovieAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}